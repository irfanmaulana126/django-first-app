# Generated by Django 4.0 on 2021-12-13 09:04

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Districts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='sub_district_name', max_length=100)),
                ('is_active', models.BooleanField(blank=True, db_column='is_active', default=True, null=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name_plural': 'MASTER KECAMATAN',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_number', models.IntegerField()),
                ('name', models.CharField(db_column='province_name', max_length=100)),
                ('is_active', models.BooleanField(blank=True, db_column='is_active', default=True, null=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name_plural': 'MASTER PROVINSI',
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191, unique=True)),
                ('display_name', models.CharField(blank=True, max_length=191, null=True)),
                ('description', models.CharField(blank=True, max_length=191, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Master Role',
            },
        ),
        migrations.CreateModel(
            name='Villages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='kel_name', max_length=100)),
                ('is_active', models.BooleanField(blank=True, db_column='is_active', default=True, null=True, verbose_name='Aktif')),
                ('village', models.ForeignKey(blank=True, db_column='village_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='userAuth.districts')),
            ],
            options={
                'verbose_name_plural': 'MASTER KELURAHAN/DESA',
            },
        ),
        migrations.CreateModel(
            name='Regencies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='district_name', max_length=100)),
                ('is_active', models.BooleanField(blank=True, db_column='is_active', default=True, null=True, verbose_name='Aktif')),
                ('id_prov', models.ForeignKey(blank=True, db_column='id_prov', null=True, on_delete=django.db.models.deletion.SET_NULL, to='userAuth.province')),
            ],
            options={
                'verbose_name_plural': 'MASTER KABUPATEN/KOTA',
            },
        ),
        migrations.AddField(
            model_name='districts',
            name='district',
            field=models.ForeignKey(blank=True, db_column='district_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='userAuth.regencies'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.IntegerField(choices=[(0, 'Belum Terdaftar'), (1, 'Admin'), (2, 'Verifikator Data'), (3, 'Pusdatin'), (4, 'Dinas Kesehatan'), (5, 'Puskesmas')], default=0)),
                ('is_email_confirm', models.BooleanField(default=False)),
                ('phone', models.CharField(blank=True, max_length=14, null=True)),
                ('nik', models.CharField(blank=True, max_length=16, null=True)),
                ('nmpimp', models.CharField(blank=True, max_length=100, null=True)),
                ('telpimp', models.CharField(blank=True, max_length=13, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='userAuth.districts')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='userAuth.province')),
                ('regencies', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='userAuth.regencies')),
                ('roles', models.ManyToManyField(to='userAuth.Roles')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('village', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='userAuth.villages')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
